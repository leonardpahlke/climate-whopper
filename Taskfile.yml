version: '3'

vars:
  PROJECT_NAME: "climate-whopper"
  OPERATOR_CLUSTER_NAME: "whopper-operator-cluster"
  OPERATOR_POD_NAME: "pulumi-kubernetes-operator"
  OPERATOR_CLUSTER_MACHINE_TYPE: "n1-standard-1"
  OPERATOR_CLUSTER_REGION: "europe-west3"
  OPERATOR_CLUSTER_INITIAL_NODE_COUNT: 1
  GCP_PROJECT: "liquid-leonard-pahlke-302"
  ENV: '{{default "prd" .ENV}}'
  LOCAL_KUBECONFIG_PATH:
    sh: echo $(pwd)'/.kube/config'

tasks:
  verify:
    desc: Run all verify and test tasks
    cmds:
      - task: verify-go
      - task: verify-eslint

  verify-go:
    desc: Run golang verify and test tasks
    cmds:
      - task: verify-build
      - task: verify-go-mod
      - task: verify-golangci-lint
      - task: test-go-unit

  verify-build:
    cmds: 
      - ./scripts/verify/verify-build.sh
    sources:
      - ./*.go

  verify-go-mod:
    cmds: 
      - go mod tidy
      - go mod verify
    sources:
      - go.mod
      - go.sum

  verify-golangci-lint:
    cmds: 
      - ./scripts/verify/verify-golangci-lint.sh
    sources:
      - ./*.go

  verify-eslint:
    cmds: 
      - npm run format
      - npm run lint -- --fix
    sources:
      - ./*.ts

  k-op:
    desc: kubectl wrapper to interact with operator cluster
    cmds:
      - kubectl {{.CLI_ARGS}} --kubeconfig {{.LOCAL_KUBECONFIG_PATH}}

  # UPDATE dependencies
  update:
    desc: update project dependencies
    cmds:
      - task: update-deps-go
    sources:
      - ./*.go

  update-deps-go:
    cmds:
      - GO111MODULE=on
      - go get -u -t ./...
      - task: verify-go-mod
    sources:
      - go.mod
      - go.sum

  # TEST
  test-go-unit:
    cmds: 
      - ./scripts/verify/verify-test-go.sh
    sources:
      - ./*.go
    generates:
      - ./coverage.html
      - ./coverage.out

  # Bootstrap tasks
  bootstrap:
    desc: Initialize project and create it resources
    cmds:
      - echo "Create Kubernetes cluster to host pulumi operator"
      - task: create-operator-cluster
      - task: init-pulumi-project

  create-operator-cluster: 
    cmds: 
      - echo "Enable gcp container api"
      - gcloud services enable container.googleapis.com
      - echo "Deploy {{.ENV}} GKE cluster"
      - gcloud container clusters create {{.OPERATOR_CLUSTER_NAME}}-{{.ENV}} --num-nodes={{.OPERATOR_CLUSTER_INITIAL_NODE_COUNT}} --region={{.OPERATOR_CLUSTER_REGION}} --machine-type={{.OPERATOR_CLUSTER_MACHINE_TYPE}} --no-enable-ip-alias --project {{.GCP_PROJECT}}
      - echo "Get credentials to access the cluster with kubectl"
      - gcloud config set container/use_application_default_credentials true
      - task: pull-kubernetes-operator-cluster-config

  pull-kubernetes-operator-cluster-config:
    cmds:
      - echo "Get a local kubeconfig copy to access the operator GKE cluster"
      - KUBECONFIG={{.LOCAL_KUBECONFIG_PATH}} gcloud container clusters get-credentials {{.OPERATOR_CLUSTER_NAME}}-{{.ENV}} --region={{.OPERATOR_CLUSTER_REGION}} --project {{.GCP_PROJECT}}
    generates:
      - "{{.LOCAL_KUBECONFIG_PATH}}"

  compile-grpc:
    cmds:
      - protoc -I=. -I=$(GOPATH)/googleapis/ --go_out=pkg/ --go_opt=paths=source_relative --go-grpc_out=pkg/ --go-grpc_opt=paths=source_relative api/whopper.proto

  init-pulumi-project:
    cmds:
      - echo "Set operator pulumi config"
      - pulumi config set --secret pulumiAccessToken {{.PULUMI_ACCESS_TOKEN}}
      - pulumi config set stackProjectRepo {{.PROJECT_REPO}}
      - pulumi config set stackCommit {{.COMMIT_SHA}}
      - pulumi config set stackName {{.PULUMI_ORG}}/{{.PULUMI_STACK_NAME}}/{{.ENV}}
      - pulumi config set operatorPodName {{.OPERATOR_POD_NAME}}}
      - pulumi config set --secret operatorKubeconfig $(cat {{.LOCAL_KUBECONFIG_PATH}})
      - echo "pulumi config set, deploy pulumi operator to cluster"
      - task: pulumi-up
      - echo "check if operator is running"
      - task: k-op -- get pods -o wide -l name={{.OPERATOR_POD_NAME}}
    vars:
      PULUMI_ORG: leonardpahlke
      PULUMI_ACCESS_TOKEN:
        sh: $PULUMI_ACCESS_TOKEN
      COMMIT_SHA:
        sh: git rev-parse HEAD
      PROJECT_REPO: "https://github.com/leonardpahlke/climate-whopper"
      PULUMI_STACK_NAME: "whopper-infra"
    sources:
      - "{{.LOCAL_KUBECONFIG_PATH}}"

  operator-logs:
    cmds:
      - task: k-op -- logs -l name={{.OPERATOR_POD_NAME}} -f

  pulumi-up:
    cmds:
      - pulumi up -s {{.ENV}} -y

  # CLEANUP
  cleanup:
    desc: delete created it-resources
    cmds:
      - task: pulumi-destroy
      - task: delete-operator-cluster

  delete-operator-cluster:
    cmds:
      - echo "Delete {{.ENV}} GKE cluster {{.OPERATOR_CLUSTER_NAME}}-{{.ENV}}"
      - gcloud container clusters delete {{.OPERATOR_CLUSTER_NAME}}-{{.ENV}} --region {{.OPERATOR_CLUSTER_REGION}} --project {{.GCP_PROJECT}}
      - rm "{{.LOCAL_KUBECONFIG_PATH}}"
    sources:
      - "{{.LOCAL_KUBECONFIG_PATH}}"

  pulumi-destroy:
    cmds:
      - pulumi destroy -s {{.ENV}} -y
      - pulumi stack -s {{.ENV}} rm -y