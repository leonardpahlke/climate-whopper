// Copyright 2022 Leonard Vincent Simon Pahlke
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "whopper/pkg/api/v1/analyzer";

package whopper.api.v1;

import "google/api/field_behavior.proto";
import "google/cloud/language/v1/language_service.proto";
import "google/protobuf/empty.proto";
import "api/v1/whopper.proto";


//
// ANALYZER API
//
service Analyzer {
    rpc Analyze (AnalyzerRequest) returns (AnalyzerResponse) {}
    rpc List (ListAnalyzedTextsRequest) returns (ListAnalyzedTextsResponse){}
    rpc Get (GetAnalyzedTextRequest) returns (GetAnalyzedTextResponse) {}
    rpc GetGroups (google.protobuf.Empty) returns (GetGroupsResponse) {}
    rpc Update (AnalyzedText) returns (AnalyzedText){}
    rpc Delete (DeleteAnalyzedTextRequest) returns (google.protobuf.Empty){}
}


// General article information which is provided by the article discoverer
message AnalyzedText {
    // Id of the article (unique)
    ID id = 1;
    // Group to sort the article to
    Group group = 2;
    // Analyzed entities
    google.cloud.language.v1.AnalyzeEntitiesResponse analyzeEntitiesResponse = 3;
    // Analyzed sentiment
    google.cloud.language.v1.AnalyzeSentimentResponse analyzeSentimentResponse = 4;
    // Meta information set for the stored entry
    Meta entry_meta = 5;
}

// List
message ListAnalyzedTextsRequest {
    // The parent should be set to a group
    Group group = 1 [(google.api.field_behavior) = REQUIRED];
    // The maximum number of items to return.
    int32 page_size = 2 [(google.api.field_behavior) = REQUIRED];
    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}
message ListAnalyzedTextsResponse {
    repeated AnalyzedText discovered_texts = 1;
    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;
    Status status = 3;
}

// Get
message GetAnalyzedTextRequest {
    // Id of the requested article 
    ID id = 1 [(google.api.field_behavior) = REQUIRED];
}
message GetAnalyzedTextResponse {
    AnalyzedText discovered_article = 1;
    Status status = 2;
}
message GetGroupsResponse {
    repeated string group = 1;
}


// Discover
message AnalyzerRequest {
    // Required: group that is used to sort the analyzed text data
    Group group = 1 [(google.api.field_behavior) = REQUIRED];
    // Required: text that should get analyzed
    string text = 2 [(google.api.field_behavior) = REQUIRED];
    // Optional: can be set to disable sentiment analysis
    bool disableSentimentAnalysis = 3 [(google.api.field_behavior) = OPTIONAL];
    // Optional: Can be set to disable entities analyisis
    bool disableEntitiesAnalysis = 4 [(google.api.field_behavior) = OPTIONAL];
}
message AnalyzerResponse {
    repeated AnalyzedText texts = 1;
    Status status = 2;
}

// Delete
message DeleteAnalyzedTextRequest {
    // Id of the article that should get deleted
    ID id = 2 [(google.api.field_behavior) = REQUIRED];
}