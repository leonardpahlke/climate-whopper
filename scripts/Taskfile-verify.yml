version: "3"

vars:
  API_FOLDER:
    sh: echo $GOPATH

tasks:
  # VERIFY - check code quality and detect errors and warnings
  code:
    desc: Verify project code
    cmds:
      - task: check
      - task: go
      - task: ts

  # INSTALL - get dependencies and start with project
  check: sh ./scripts/verify/check-installations.sh

  install:
    desc: Install and update project dependencies
    cmds:
      - echo "Install libraries with npm used to build IaC with pulumi for the whopper infrastructure"
      - task: install-whopper-ts
      - echo "Install libraries with npm used to build IaC with pulumi for the operator infrastructure"
      - task: install-operator-ts
      - echo "Install and update golang dependencies"
      - task: update-deps-go
      - echo "Pull googleapi repositorty as it is getting used to build the whopper API"
      - task: pull-googleapi-language-proto
      - echo "Compile gRPC Api code"
      - task: compile-grpc

  install-whopper-ts:
    dir: "{{.WHOPPER_INFRA_PATH}}"
    cmds:
      - npm install
    sources:
      - ./*.ts
    generates:
      - package-lock.json
      - package.json

  install-operator-ts:
    dir: "{{.OPERATOR_INFRA_PATH}}"
    cmds:
      - npm install
    sources:
      - ./*.ts
    generates:
      - package-lock.json
      - package.json

  pull-googleapi-language-proto:
    cmds:
      - cmd: git clone https://github.com/googleapis/googleapis {{.API_FOLDER}}/googleapis
        ignore_error: true
    generates:
      - "{{.API_FOLDER}}/language_service.proto"

  compile-grpc:
    cmds:
      - protoc -I=. -I={{.API_FOLDER}}/googleapis/ --go_out=pkg/ --go_opt=paths=source_relative --go-grpc_out=pkg/ --go-grpc_opt=paths=source_relative api/whopper.proto
    sources:
      - ./api/whopper.proto
    generates:
      - ./pkg/api/*.go

  # Golang Verify
  go:
    desc: Verify project golang code
    cmds:
      - task: check-go-build
      - task: check-go-mod
      - task: check-golangci-lint
      - task: test-go-unit

  check-go-build: ./scripts/verify/verify-build.sh

  check-go-mod:
    cmds:
      - go mod tidy
      - go mod verify
    sources:
      - go.mod
      - go.sum

  check-golangci-lint: ./scripts/verify/verify-golangci-lint.sh

  update-deps-go:
    cmds:
      - go get -u -t ./...
      - task: check-go-mod
    generates:
      - go.mod
      - go.sum

  test-go-unit: ./scripts/verify/verify-test-go.sh

  # Typescript Verify
  ts:
    desc: Verify project typescript code
    cmds:
      - task: verify-whopper-eslint
      - task: verify-operator-eslint

  verify-whopper-eslint:
    dir: "{{.WHOPPER_INFRA_PATH}}"
    cmds:
      - npm run lint -- --fix
    sources:
      - ./*.ts

  verify-operator-eslint:
    dir: "{{.OPERATOR_INFRA_PATH}}"
    cmds:
      - npm run lint -- --fix
    sources:
      - ./*.ts