// Copyright 2022 Leonard Vincent Simon Pahlke
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: api/v1/discoverer/discoverer.proto

package discoverer

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	v1 "whopper/pkg/api/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// General article information which is provided by the article discoverer
type DiscoveredArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the article (unique)
	Id *v1.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// URL which leads to the article text
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// article release date
	ReleaseDate string `protobuf:"bytes,3,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	// Title of the article
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Subtitle of the article
	Subtitle string `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// General description of the article
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Category of the article on the newspaper
	Category string `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	// Article newspaper
	Newspaper *v1.Group `protobuf:"bytes,8,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	// Meta information set for the stored entry
	EntryMeta *v1.Meta `protobuf:"bytes,9,opt,name=entry_meta,json=entryMeta,proto3" json:"entry_meta,omitempty"`
}

func (x *DiscoveredArticle) Reset() {
	*x = DiscoveredArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveredArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredArticle) ProtoMessage() {}

func (x *DiscoveredArticle) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredArticle.ProtoReflect.Descriptor instead.
func (*DiscoveredArticle) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoveredArticle) GetId() *v1.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DiscoveredArticle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DiscoveredArticle) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *DiscoveredArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiscoveredArticle) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *DiscoveredArticle) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiscoveredArticle) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DiscoveredArticle) GetNewspaper() *v1.Group {
	if x != nil {
		return x.Newspaper
	}
	return nil
}

func (x *DiscoveredArticle) GetEntryMeta() *v1.Meta {
	if x != nil {
		return x.EntryMeta
	}
	return nil
}

// List
type ListDiscovererRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent should be set to a newspaper
	Newspaper *v1.Group `protobuf:"bytes,1,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListDiscovererRequest) Reset() {
	*x = ListDiscovererRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscovererRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscovererRequest) ProtoMessage() {}

func (x *ListDiscovererRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscovererRequest.ProtoReflect.Descriptor instead.
func (*ListDiscovererRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{1}
}

func (x *ListDiscovererRequest) GetNewspaper() *v1.Group {
	if x != nil {
		return x.Newspaper
	}
	return nil
}

func (x *ListDiscovererRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDiscovererRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDiscovererResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoveredArticles []*DiscoveredArticle `protobuf:"bytes,1,rep,name=discovered_articles,json=discoveredArticles,proto3" json:"discovered_articles,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Status        *v1.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListDiscovererResponse) Reset() {
	*x = ListDiscovererResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiscovererResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiscovererResponse) ProtoMessage() {}

func (x *ListDiscovererResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiscovererResponse.ProtoReflect.Descriptor instead.
func (*ListDiscovererResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{2}
}

func (x *ListDiscovererResponse) GetDiscoveredArticles() []*DiscoveredArticle {
	if x != nil {
		return x.DiscoveredArticles
	}
	return nil
}

func (x *ListDiscovererResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDiscovererResponse) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Get
type GetDiscovererRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the requested article
	Id *v1.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDiscovererRequest) Reset() {
	*x = GetDiscovererRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscovererRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscovererRequest) ProtoMessage() {}

func (x *GetDiscovererRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscovererRequest.ProtoReflect.Descriptor instead.
func (*GetDiscovererRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{3}
}

func (x *GetDiscovererRequest) GetId() *v1.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetNewspapersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newspapers []*v1.Group `protobuf:"bytes,1,rep,name=newspapers,proto3" json:"newspapers,omitempty"`
}

func (x *GetNewspapersResponse) Reset() {
	*x = GetNewspapersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewspapersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewspapersResponse) ProtoMessage() {}

func (x *GetNewspapersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewspapersResponse.ProtoReflect.Descriptor instead.
func (*GetNewspapersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewspapersResponse) GetNewspapers() []*v1.Group {
	if x != nil {
		return x.Newspapers
	}
	return nil
}

type GetParsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parsers []*v1.Parser `protobuf:"bytes,1,rep,name=parsers,proto3" json:"parsers,omitempty"`
}

func (x *GetParsersResponse) Reset() {
	*x = GetParsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsersResponse) ProtoMessage() {}

func (x *GetParsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsersResponse.ProtoReflect.Descriptor instead.
func (*GetParsersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{5}
}

func (x *GetParsersResponse) GetParsers() []*v1.Parser {
	if x != nil {
		return x.Parsers
	}
	return nil
}

// Discover
type DiscoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Newspaper to start the discovery
	Newspaper *v1.Group `protobuf:"bytes,1,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	// Parser to execute the URL article discovery parsing
	Parser *v1.Parser `protobuf:"bytes,2,opt,name=parser,proto3" json:"parser,omitempty"`
}

func (x *DiscoverRequest) Reset() {
	*x = DiscoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverRequest) ProtoMessage() {}

func (x *DiscoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverRequest.ProtoReflect.Descriptor instead.
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{6}
}

func (x *DiscoverRequest) GetNewspaper() *v1.Group {
	if x != nil {
		return x.Newspaper
	}
	return nil
}

func (x *DiscoverRequest) GetParser() *v1.Parser {
	if x != nil {
		return x.Parser
	}
	return nil
}

type DiscoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*DiscoveredArticle `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
	Status   *v1.Status           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DiscoverResponse) Reset() {
	*x = DiscoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverResponse) ProtoMessage() {}

func (x *DiscoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverResponse.ProtoReflect.Descriptor instead.
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{7}
}

func (x *DiscoverResponse) GetArticles() []*DiscoveredArticle {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *DiscoverResponse) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Delete
type DeleteDiscoveredArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the article that should get deleted
	Id *v1.ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDiscoveredArticleRequest) Reset() {
	*x = DeleteDiscoveredArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDiscoveredArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiscoveredArticleRequest) ProtoMessage() {}

func (x *DeleteDiscoveredArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_discoverer_discoverer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiscoveredArticleRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiscoveredArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_discoverer_discoverer_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDiscoveredArticleRequest) GetId() *v1.ID {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_api_v1_discoverer_discoverer_proto protoreflect.FileDescriptor

var file_api_v1_discoverer_discoverer_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x68, 0x6f, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x11, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x6f,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x68, 0x6f, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x22, 0x97, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x6e, 0x65,
	0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x44, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e,
	0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0x81, 0x01,
	0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x49, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x44, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x32, 0xcc, 0x04, 0x0a,
	0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x68,
	0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x77,
	0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x25, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x22, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x1a, 0x21, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x2e, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x1f, 0x5a, 0x1d, 0x77,
	0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_discoverer_discoverer_proto_rawDescOnce sync.Once
	file_api_v1_discoverer_discoverer_proto_rawDescData = file_api_v1_discoverer_discoverer_proto_rawDesc
)

func file_api_v1_discoverer_discoverer_proto_rawDescGZIP() []byte {
	file_api_v1_discoverer_discoverer_proto_rawDescOnce.Do(func() {
		file_api_v1_discoverer_discoverer_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_discoverer_discoverer_proto_rawDescData)
	})
	return file_api_v1_discoverer_discoverer_proto_rawDescData
}

var file_api_v1_discoverer_discoverer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_discoverer_discoverer_proto_goTypes = []interface{}{
	(*DiscoveredArticle)(nil),              // 0: whopper.api.v1.DiscoveredArticle
	(*ListDiscovererRequest)(nil),          // 1: whopper.api.v1.ListDiscovererRequest
	(*ListDiscovererResponse)(nil),         // 2: whopper.api.v1.ListDiscovererResponse
	(*GetDiscovererRequest)(nil),           // 3: whopper.api.v1.GetDiscovererRequest
	(*GetNewspapersResponse)(nil),          // 4: whopper.api.v1.GetNewspapersResponse
	(*GetParsersResponse)(nil),             // 5: whopper.api.v1.GetParsersResponse
	(*DiscoverRequest)(nil),                // 6: whopper.api.v1.DiscoverRequest
	(*DiscoverResponse)(nil),               // 7: whopper.api.v1.DiscoverResponse
	(*DeleteDiscoveredArticleRequest)(nil), // 8: whopper.api.v1.DeleteDiscoveredArticleRequest
	(*v1.ID)(nil),                          // 9: whopper.api.v1.ID
	(*v1.Group)(nil),                       // 10: whopper.api.v1.Group
	(*v1.Meta)(nil),                        // 11: whopper.api.v1.Meta
	(*v1.Status)(nil),                      // 12: whopper.api.v1.Status
	(*v1.Parser)(nil),                      // 13: whopper.api.v1.Parser
	(*emptypb.Empty)(nil),                  // 14: google.protobuf.Empty
}
var file_api_v1_discoverer_discoverer_proto_depIdxs = []int32{
	9,  // 0: whopper.api.v1.DiscoveredArticle.id:type_name -> whopper.api.v1.ID
	10, // 1: whopper.api.v1.DiscoveredArticle.newspaper:type_name -> whopper.api.v1.Group
	11, // 2: whopper.api.v1.DiscoveredArticle.entry_meta:type_name -> whopper.api.v1.Meta
	10, // 3: whopper.api.v1.ListDiscovererRequest.newspaper:type_name -> whopper.api.v1.Group
	0,  // 4: whopper.api.v1.ListDiscovererResponse.discovered_articles:type_name -> whopper.api.v1.DiscoveredArticle
	12, // 5: whopper.api.v1.ListDiscovererResponse.status:type_name -> whopper.api.v1.Status
	9,  // 6: whopper.api.v1.GetDiscovererRequest.id:type_name -> whopper.api.v1.ID
	10, // 7: whopper.api.v1.GetNewspapersResponse.newspapers:type_name -> whopper.api.v1.Group
	13, // 8: whopper.api.v1.GetParsersResponse.parsers:type_name -> whopper.api.v1.Parser
	10, // 9: whopper.api.v1.DiscoverRequest.newspaper:type_name -> whopper.api.v1.Group
	13, // 10: whopper.api.v1.DiscoverRequest.parser:type_name -> whopper.api.v1.Parser
	0,  // 11: whopper.api.v1.DiscoverResponse.articles:type_name -> whopper.api.v1.DiscoveredArticle
	12, // 12: whopper.api.v1.DiscoverResponse.status:type_name -> whopper.api.v1.Status
	9,  // 13: whopper.api.v1.DeleteDiscoveredArticleRequest.id:type_name -> whopper.api.v1.ID
	6,  // 14: whopper.api.v1.Discoverer.Discover:input_type -> whopper.api.v1.DiscoverRequest
	1,  // 15: whopper.api.v1.Discoverer.List:input_type -> whopper.api.v1.ListDiscovererRequest
	3,  // 16: whopper.api.v1.Discoverer.Get:input_type -> whopper.api.v1.GetDiscovererRequest
	14, // 17: whopper.api.v1.Discoverer.GetNewspapers:input_type -> google.protobuf.Empty
	14, // 18: whopper.api.v1.Discoverer.GetParsers:input_type -> google.protobuf.Empty
	0,  // 19: whopper.api.v1.Discoverer.Update:input_type -> whopper.api.v1.DiscoveredArticle
	8,  // 20: whopper.api.v1.Discoverer.Delete:input_type -> whopper.api.v1.DeleteDiscoveredArticleRequest
	7,  // 21: whopper.api.v1.Discoverer.Discover:output_type -> whopper.api.v1.DiscoverResponse
	2,  // 22: whopper.api.v1.Discoverer.List:output_type -> whopper.api.v1.ListDiscovererResponse
	0,  // 23: whopper.api.v1.Discoverer.Get:output_type -> whopper.api.v1.DiscoveredArticle
	4,  // 24: whopper.api.v1.Discoverer.GetNewspapers:output_type -> whopper.api.v1.GetNewspapersResponse
	5,  // 25: whopper.api.v1.Discoverer.GetParsers:output_type -> whopper.api.v1.GetParsersResponse
	0,  // 26: whopper.api.v1.Discoverer.Update:output_type -> whopper.api.v1.DiscoveredArticle
	14, // 27: whopper.api.v1.Discoverer.Delete:output_type -> google.protobuf.Empty
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_discoverer_discoverer_proto_init() }
func file_api_v1_discoverer_discoverer_proto_init() {
	if File_api_v1_discoverer_discoverer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_discoverer_discoverer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveredArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscovererRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiscovererResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscovererRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewspapersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_discoverer_discoverer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDiscoveredArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_discoverer_discoverer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_discoverer_discoverer_proto_goTypes,
		DependencyIndexes: file_api_v1_discoverer_discoverer_proto_depIdxs,
		MessageInfos:      file_api_v1_discoverer_discoverer_proto_msgTypes,
	}.Build()
	File_api_v1_discoverer_discoverer_proto = out.File
	file_api_v1_discoverer_discoverer_proto_rawDesc = nil
	file_api_v1_discoverer_discoverer_proto_goTypes = nil
	file_api_v1_discoverer_discoverer_proto_depIdxs = nil
}
