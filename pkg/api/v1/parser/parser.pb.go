// Copyright 2022 Leonard Vincent Simon Pahlke
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: api/v1/parser/parser.proto

package parser

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	v1 "whopper/pkg/api/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Scraped article information
type ParsedArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Article identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Article newspaper
	Newspaper string `protobuf:"bytes,2,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	// URL of the article text
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// Article release date
	ReleaseDate string `protobuf:"bytes,4,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	// Title of the article
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Subtitle of the article
	Subtitle string `protobuf:"bytes,6,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// General description of the article
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Category of the article on the newspaper
	Category string `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	// Article text how it is written on the website
	OriginalText string `protobuf:"bytes,9,opt,name=originalText,proto3" json:"originalText,omitempty"`
	// Article text translated if the original language is not english
	TranslatedText string `protobuf:"bytes,10,opt,name=translatedText,proto3" json:"translatedText,omitempty"`
	// Tells if the article has been translated
	Articletranslated bool `protobuf:"varint,11,opt,name=articletranslated,proto3" json:"articletranslated,omitempty"`
	// Original language of the article
	OriginalLanguage string `protobuf:"bytes,12,opt,name=originalLanguage,proto3" json:"originalLanguage,omitempty"`
	// Article data which has not been parsed or processed yet
	RawArticleText string `protobuf:"bytes,13,opt,name=rawArticleText,proto3" json:"rawArticleText,omitempty"`
	// Anything else that could be useful but that is not standardized here
	Details []*anypb.Any `protobuf:"bytes,14,rep,name=details,proto3" json:"details,omitempty"`
	// Meta information about the data entry
	EntryMeta *v1.Meta `protobuf:"bytes,15,opt,name=entry_meta,json=entryMeta,proto3" json:"entry_meta,omitempty"`
	// The parser that has been used to parse the data
	Parser *v1.Parser `protobuf:"bytes,16,opt,name=parser,proto3" json:"parser,omitempty"`
}

func (x *ParsedArticle) Reset() {
	*x = ParsedArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedArticle) ProtoMessage() {}

func (x *ParsedArticle) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedArticle.ProtoReflect.Descriptor instead.
func (*ParsedArticle) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{0}
}

func (x *ParsedArticle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ParsedArticle) GetNewspaper() string {
	if x != nil {
		return x.Newspaper
	}
	return ""
}

func (x *ParsedArticle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParsedArticle) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *ParsedArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ParsedArticle) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ParsedArticle) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ParsedArticle) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ParsedArticle) GetOriginalText() string {
	if x != nil {
		return x.OriginalText
	}
	return ""
}

func (x *ParsedArticle) GetTranslatedText() string {
	if x != nil {
		return x.TranslatedText
	}
	return ""
}

func (x *ParsedArticle) GetArticletranslated() bool {
	if x != nil {
		return x.Articletranslated
	}
	return false
}

func (x *ParsedArticle) GetOriginalLanguage() string {
	if x != nil {
		return x.OriginalLanguage
	}
	return ""
}

func (x *ParsedArticle) GetRawArticleText() string {
	if x != nil {
		return x.RawArticleText
	}
	return ""
}

func (x *ParsedArticle) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ParsedArticle) GetEntryMeta() *v1.Meta {
	if x != nil {
		return x.EntryMeta
	}
	return nil
}

func (x *ParsedArticle) GetParser() *v1.Parser {
	if x != nil {
		return x.Parser
	}
	return nil
}

// List
type ListParsedArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent should be set to a newspaper
	Newspaper string `protobuf:"bytes,1,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListParsedArticlesRequest) Reset() {
	*x = ListParsedArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParsedArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParsedArticlesRequest) ProtoMessage() {}

func (x *ListParsedArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParsedArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListParsedArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{1}
}

func (x *ListParsedArticlesRequest) GetNewspaper() string {
	if x != nil {
		return x.Newspaper
	}
	return ""
}

func (x *ListParsedArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListParsedArticlesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListParsedArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParsedArticles []*ParsedArticle `protobuf:"bytes,1,rep,name=parsed_articles,json=parsedArticles,proto3" json:"parsed_articles,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Status        *v1.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListParsedArticlesResponse) Reset() {
	*x = ListParsedArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParsedArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParsedArticlesResponse) ProtoMessage() {}

func (x *ListParsedArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParsedArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListParsedArticlesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{2}
}

func (x *ListParsedArticlesResponse) GetParsedArticles() []*ParsedArticle {
	if x != nil {
		return x.ParsedArticles
	}
	return nil
}

func (x *ListParsedArticlesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListParsedArticlesResponse) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Get
type GetParsedArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newspaper string `protobuf:"bytes,1,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetParsedArticleRequest) Reset() {
	*x = GetParsedArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParsedArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsedArticleRequest) ProtoMessage() {}

func (x *GetParsedArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsedArticleRequest.ProtoReflect.Descriptor instead.
func (*GetParsedArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{3}
}

func (x *GetParsedArticleRequest) GetNewspaper() string {
	if x != nil {
		return x.Newspaper
	}
	return ""
}

func (x *GetParsedArticleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetParsedArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParsedArticle *ParsedArticle `protobuf:"bytes,1,opt,name=parsed_article,json=parsedArticle,proto3" json:"parsed_article,omitempty"`
	Status        *v1.Status     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetParsedArticleResponse) Reset() {
	*x = GetParsedArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParsedArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsedArticleResponse) ProtoMessage() {}

func (x *GetParsedArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsedArticleResponse.ProtoReflect.Descriptor instead.
func (*GetParsedArticleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{4}
}

func (x *GetParsedArticleResponse) GetParsedArticle() *ParsedArticle {
	if x != nil {
		return x.ParsedArticle
	}
	return nil
}

func (x *GetParsedArticleResponse) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetParsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parsers []*v1.Parser `protobuf:"bytes,1,rep,name=parsers,proto3" json:"parsers,omitempty"`
}

func (x *GetParsersResponse) Reset() {
	*x = GetParsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParsersResponse) ProtoMessage() {}

func (x *GetParsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParsersResponse.ProtoReflect.Descriptor instead.
func (*GetParsersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{5}
}

func (x *GetParsersResponse) GetParsers() []*v1.Parser {
	if x != nil {
		return x.Parsers
	}
	return nil
}

type GetNewspapersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newspapers []*v1.Newspaper `protobuf:"bytes,1,rep,name=newspapers,proto3" json:"newspapers,omitempty"`
}

func (x *GetNewspapersResponse) Reset() {
	*x = GetNewspapersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewspapersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewspapersResponse) ProtoMessage() {}

func (x *GetNewspapersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewspapersResponse.ProtoReflect.Descriptor instead.
func (*GetNewspapersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{6}
}

func (x *GetNewspapersResponse) GetNewspapers() []*v1.Newspaper {
	if x != nil {
		return x.Newspapers
	}
	return nil
}

// Parse
type ParserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Parser to execute the URL article parsing
	Parser *v1.Parser `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	// Can be set to a BCP-47 language code for article translation
	TranslationLanguage string `protobuf:"bytes,2,opt,name=translation_language,json=translationLanguage,proto3" json:"translation_language,omitempty"`
	// Article URL that can be parsed by the specified parser and shows the full article text
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ParserRequest) Reset() {
	*x = ParserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserRequest) ProtoMessage() {}

func (x *ParserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserRequest.ProtoReflect.Descriptor instead.
func (*ParserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{7}
}

func (x *ParserRequest) GetParser() *v1.Parser {
	if x != nil {
		return x.Parser
	}
	return nil
}

func (x *ParserRequest) GetTranslationLanguage() string {
	if x != nil {
		return x.TranslationLanguage
	}
	return ""
}

func (x *ParserRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ParserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*ParsedArticle `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
	Status   *v1.Status       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ParserResponse) Reset() {
	*x = ParserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserResponse) ProtoMessage() {}

func (x *ParserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserResponse.ProtoReflect.Descriptor instead.
func (*ParserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{8}
}

func (x *ParserResponse) GetArticles() []*ParsedArticle {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *ParserResponse) GetStatus() *v1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Delete
type DeleteParsedArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newspaper string `protobuf:"bytes,1,opt,name=newspaper,proto3" json:"newspaper,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteParsedArticleRequest) Reset() {
	*x = DeleteParsedArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_parser_parser_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteParsedArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteParsedArticleRequest) ProtoMessage() {}

func (x *DeleteParsedArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_parser_parser_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteParsedArticleRequest.ProtoReflect.Descriptor instead.
func (*DeleteParsedArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_parser_parser_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteParsedArticleRequest) GetNewspaper() string {
	if x != nil {
		return x.Newspaper
	}
	return ""
}

func (x *DeleteParsedArticleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_v1_parser_parser_proto protoreflect.FileDescriptor

var file_api_v1_parser_parser_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x77, 0x68,
	0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x68, 0x6f, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x04, 0x0a, 0x0d, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x77,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x22, 0x84, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0d, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77,
	0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x52, 0x0a, 0x6e, 0x65,
	0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68, 0x6f,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x7b,
	0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x68,
	0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x65, 0x77,
	0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69,
	0x64, 0x32, 0xa5, 0x07, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x12, 0x7b, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x77,
	0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x68,
	0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x3d, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x7d, 0x3a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x8c, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x6f, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x3d, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12,
	0x89, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x3d, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x5d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x22, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x12, 0xab, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x77, 0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x1d, 0x2e, 0x77,
	0x68, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x63, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x5d, 0x32, 0x4c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x3d, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x69, 0x64, 0x3d,
	0x69, 0x64, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x3a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x86, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x68,
	0x6f, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x2a, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x65,
	0x77, 0x73, 0x70, 0x61, 0x70, 0x65, 0x72, 0x3d, 0x6e, 0x65, 0x77, 0x73, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x69, 0x64, 0x3d, 0x69, 0x64, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0x1b, 0x5a, 0x19, 0x77, 0x68, 0x6f,
	0x70, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_parser_parser_proto_rawDescOnce sync.Once
	file_api_v1_parser_parser_proto_rawDescData = file_api_v1_parser_parser_proto_rawDesc
)

func file_api_v1_parser_parser_proto_rawDescGZIP() []byte {
	file_api_v1_parser_parser_proto_rawDescOnce.Do(func() {
		file_api_v1_parser_parser_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_parser_parser_proto_rawDescData)
	})
	return file_api_v1_parser_parser_proto_rawDescData
}

var file_api_v1_parser_parser_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_v1_parser_parser_proto_goTypes = []interface{}{
	(*ParsedArticle)(nil),              // 0: whopper.api.v1.ParsedArticle
	(*ListParsedArticlesRequest)(nil),  // 1: whopper.api.v1.ListParsedArticlesRequest
	(*ListParsedArticlesResponse)(nil), // 2: whopper.api.v1.ListParsedArticlesResponse
	(*GetParsedArticleRequest)(nil),    // 3: whopper.api.v1.GetParsedArticleRequest
	(*GetParsedArticleResponse)(nil),   // 4: whopper.api.v1.GetParsedArticleResponse
	(*GetParsersResponse)(nil),         // 5: whopper.api.v1.GetParsersResponse
	(*GetNewspapersResponse)(nil),      // 6: whopper.api.v1.GetNewspapersResponse
	(*ParserRequest)(nil),              // 7: whopper.api.v1.ParserRequest
	(*ParserResponse)(nil),             // 8: whopper.api.v1.ParserResponse
	(*DeleteParsedArticleRequest)(nil), // 9: whopper.api.v1.DeleteParsedArticleRequest
	(*anypb.Any)(nil),                  // 10: google.protobuf.Any
	(*v1.Meta)(nil),                    // 11: whopper.api.v1.Meta
	(*v1.Parser)(nil),                  // 12: whopper.api.v1.Parser
	(*v1.Status)(nil),                  // 13: whopper.api.v1.Status
	(*v1.Newspaper)(nil),               // 14: whopper.api.v1.Newspaper
	(*emptypb.Empty)(nil),              // 15: google.protobuf.Empty
}
var file_api_v1_parser_parser_proto_depIdxs = []int32{
	10, // 0: whopper.api.v1.ParsedArticle.details:type_name -> google.protobuf.Any
	11, // 1: whopper.api.v1.ParsedArticle.entry_meta:type_name -> whopper.api.v1.Meta
	12, // 2: whopper.api.v1.ParsedArticle.parser:type_name -> whopper.api.v1.Parser
	0,  // 3: whopper.api.v1.ListParsedArticlesResponse.parsed_articles:type_name -> whopper.api.v1.ParsedArticle
	13, // 4: whopper.api.v1.ListParsedArticlesResponse.status:type_name -> whopper.api.v1.Status
	0,  // 5: whopper.api.v1.GetParsedArticleResponse.parsed_article:type_name -> whopper.api.v1.ParsedArticle
	13, // 6: whopper.api.v1.GetParsedArticleResponse.status:type_name -> whopper.api.v1.Status
	12, // 7: whopper.api.v1.GetParsersResponse.parsers:type_name -> whopper.api.v1.Parser
	14, // 8: whopper.api.v1.GetNewspapersResponse.newspapers:type_name -> whopper.api.v1.Newspaper
	12, // 9: whopper.api.v1.ParserRequest.parser:type_name -> whopper.api.v1.Parser
	0,  // 10: whopper.api.v1.ParserResponse.articles:type_name -> whopper.api.v1.ParsedArticle
	13, // 11: whopper.api.v1.ParserResponse.status:type_name -> whopper.api.v1.Status
	7,  // 12: whopper.api.v1.ArticleParser.Parse:input_type -> whopper.api.v1.ParserRequest
	1,  // 13: whopper.api.v1.ArticleParser.List:input_type -> whopper.api.v1.ListParsedArticlesRequest
	3,  // 14: whopper.api.v1.ArticleParser.Get:input_type -> whopper.api.v1.GetParsedArticleRequest
	15, // 15: whopper.api.v1.ArticleParser.GetParsers:input_type -> google.protobuf.Empty
	15, // 16: whopper.api.v1.ArticleParser.GetNewspapers:input_type -> google.protobuf.Empty
	0,  // 17: whopper.api.v1.ArticleParser.Update:input_type -> whopper.api.v1.ParsedArticle
	9,  // 18: whopper.api.v1.ArticleParser.Delete:input_type -> whopper.api.v1.DeleteParsedArticleRequest
	8,  // 19: whopper.api.v1.ArticleParser.Parse:output_type -> whopper.api.v1.ParserResponse
	2,  // 20: whopper.api.v1.ArticleParser.List:output_type -> whopper.api.v1.ListParsedArticlesResponse
	4,  // 21: whopper.api.v1.ArticleParser.Get:output_type -> whopper.api.v1.GetParsedArticleResponse
	5,  // 22: whopper.api.v1.ArticleParser.GetParsers:output_type -> whopper.api.v1.GetParsersResponse
	6,  // 23: whopper.api.v1.ArticleParser.GetNewspapers:output_type -> whopper.api.v1.GetNewspapersResponse
	0,  // 24: whopper.api.v1.ArticleParser.Update:output_type -> whopper.api.v1.ParsedArticle
	15, // 25: whopper.api.v1.ArticleParser.Delete:output_type -> google.protobuf.Empty
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_parser_parser_proto_init() }
func file_api_v1_parser_parser_proto_init() {
	if File_api_v1_parser_parser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_parser_parser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsedArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParsedArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParsedArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParsedArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParsedArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewspapersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_parser_parser_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteParsedArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_parser_parser_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_parser_parser_proto_goTypes,
		DependencyIndexes: file_api_v1_parser_parser_proto_depIdxs,
		MessageInfos:      file_api_v1_parser_parser_proto_msgTypes,
	}.Build()
	File_api_v1_parser_parser_proto = out.File
	file_api_v1_parser_parser_proto_rawDesc = nil
	file_api_v1_parser_parser_proto_goTypes = nil
	file_api_v1_parser_parser_proto_depIdxs = nil
}
